// Generated by CoffeeScript 1.9.3
var State, StateAction, StateMachine;

StateMachine = (function() {
  function StateMachine(stateList) {
    this.stateList = stateList;
    this.currentState = this.stateList[0];
  }

  StateMachine.prototype.selectNextState = function() {
    return this.currentState = this.currentState.testForNextState();
  };

  StateMachine.prototype.executeCurrentState = function() {
    this.currentState.execute();
    return this.selectNextState();
  };

  return StateMachine;

})();

State = (function() {
  function State(id, name, enteringConditions, executeFunction, actionList) {
    this.id = id;
    this.name = name;
    this.enteringConditions = enteringConditions;
    this.executeFunction = executeFunction;
    this.actionList = actionList;
  }

  State.prototype.executeState = function(callback) {
    this.loopFunction();
    return typeof callback === "function" ? callback() : void 0;
  };

  State.prototype.testForNextState = function() {
    var action, i, len, ref;
    ref = this.actionList;
    for (i = 0, len = ref.length; i < len; i++) {
      action = ref[i];
      if (action.testCondition()) {
        return action.nextState;
      }
    }
  };

  State.prototype.execute = function() {
    return this.executeFunction();
  };

  return State;

})();

StateAction = (function() {
  function StateAction(testCondition, nextState) {
    this.testCondition = testCondition;
    this.nextState = nextState;
  }

  return StateAction;

})();
